{"version":3,"sources":["components/Toolbar/Toolbar.jsx","components/ProjectList/ProjectList.jsx","App.jsx","getData.js","reportWebVitals.js","index.js"],"names":["Toolbar","filters","selected","onSelectFilter","className","map","filter","onClick","nanoid","ProjectList","projects","filtredProjects","item","category","src","img","alt","App","useState","setSelected","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"0QA4BeA,MApBf,YAAyD,IAAtCC,EAAqC,EAArCA,QAASC,EAA4B,EAA5BA,SAAUC,EAAkB,EAAlBA,eACnC,OACG,oBAAIC,UAAU,UAAd,SACIH,EAAQI,KAAI,SAACC,GACX,IAAMF,EACHE,IAAWJ,EAAW,wBAA0B,eACnD,OACG,oBAEGE,UAAWA,EACXG,QAAS,kBAAMJ,EAAeG,IAHjC,SAKIA,GAJIE,qB,aCYRC,MAvBf,YAA8C,IAAvBP,EAAsB,EAAtBA,SAAUQ,EAAY,EAAZA,SAC1BC,EAAkB,GAQtB,OALGA,EADc,QAAbT,EACiBQ,EAASJ,QAAO,SAACM,GAAD,OAAUA,EAAKC,WAAaX,KAE/C,YAAOQ,GAItB,qBAAKN,UAAU,cAAf,SACIO,EAAgBN,KAAI,SAACO,GAAD,OAClB,qBACGR,UAAU,mBACVU,IAAKF,EAAKG,IACVC,IAAKJ,EAAKC,UACLL,qBCQLS,MAvBf,WACE,IADa,EAEmBC,mBAAS,OAF5B,mBAENhB,EAFM,KAEIiB,EAFJ,KAQb,OACE,sBAAKf,UAAU,MAAf,UACE,cAAC,EAAD,CACEH,QAVU,CAAC,MAAO,WAAY,UAAW,kBAWzCC,SAAUA,EACVC,eATiB,SAACG,GACtBa,GAAY,kBAAMb,QAUhB,cAAC,EAAD,CACEJ,SAAUA,EACVQ,SCtBC,CAAC,CACPK,IAAK,wGACLF,SAAU,kBACT,CACDE,IAAK,6GACLF,SAAU,YACT,CACDE,IAAK,gHACLF,SAAU,YACT,CACDE,IAAK,iHACLF,SAAU,kBACT,CACDE,IAAK,iHACLF,SAAU,YACT,CACDE,IAAK,wGACLF,SAAU,YACT,CACDE,IAAK,iHACLF,SAAU,kBACT,CACDE,IAAK,mHACLF,SAAU,YACT,CACDE,IAAK,mHACLF,SAAU,WACT,CACDE,IAAK,sHACLF,SAAU,YACT,CACDE,IAAK,wGACLF,SAAU,kBACT,CACDE,IAAK,qHACLF,SAAU,YACT,CACDE,IAAK,uHACLF,SAAU,YACT,CACDE,IAAK,mHACLF,SAAU,kBC9BEO,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCAdQ,IAASC,OACN,cAAC,IAAMC,WAAP,UACG,cAAC,EAAD,MAEHC,SAASC,eAAe,SAM3Bb,M","file":"static/js/main.782a2227.chunk.js","sourcesContent":["/* eslint-disable jsx-a11y/click-events-have-key-events */\n/* eslint-disable jsx-a11y/no-noninteractive-element-interactions */\n\nimport './Toolbar.css';\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { nanoid } from 'nanoid';\n\nfunction Toolbar({ filters, selected, onSelectFilter }) {\n   return (\n      <ul className=\"toolbar\">\n         {filters.map((filter) => {\n            const className =\n               filter === selected ? 'toolbar-item selected' : 'toolbar-item';\n            return (\n               <li\n                  key={nanoid()}\n                  className={className}\n                  onClick={() => onSelectFilter(filter)}\n               >\n                  {filter}\n               </li>\n            );\n         })}\n      </ul>\n   );\n}\n\nexport default Toolbar;\n\nToolbar.propTypes = {\n   selected: PropTypes.string.isRequired,\n   filters: PropTypes.arrayOf(PropTypes.string).isRequired,\n   onSelectFilter: PropTypes.func.isRequired,\n};\n","import './ProjectList.css';\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { nanoid } from 'nanoid';\n\nfunction ProjectList({ selected, projects }) {\n   let filtredProjects = [];\n\n   if (selected !== 'All') {\n      filtredProjects = projects.filter((item) => item.category === selected);\n   } else {\n      filtredProjects = [...projects];\n   }\n\n   return (\n      <div className=\"projectlist\">\n         {filtredProjects.map((item) => (\n            <img\n               className=\"projectlist-item\"\n               src={item.img}\n               alt={item.category}\n               key={nanoid()}\n            />\n         ))}\n      </div>\n   );\n}\n\nexport default ProjectList;\n\nProjectList.propTypes = {\n   selected: PropTypes.string.isRequired,\n   projects: PropTypes.arrayOf(PropTypes.string).isRequired,\n};\n","import './App.css';\nimport React, { useState } from 'react';\nimport Toolbar from './components/Toolbar/Toolbar';\nimport ProjectList from './components/ProjectList/ProjectList';\nimport getData from './getData';\n\nfunction App() {\n  const filtres = ['All', 'Websites', 'Flayers', 'Business Cards'];\n  const [selected, setSelected] = useState('All');\n\n  const onSelectFilter = (filter) => {\n    setSelected(() => filter);\n  }\n\n  return (\n    <div className=\"App\">\n      <Toolbar\n        filters={filtres}\n        selected={selected}\n        onSelectFilter={onSelectFilter}\n      />\n      <ProjectList\n        selected={selected}\n        projects={getData()}\n      />\n    </div>\n  );\n}\n\nexport default App;\n","export default function getData() {\n  return [{\n   img: \"https://raw.githubusercontent.com/netology-code/ra16-homeworks/master/events-state/filter/img/mon.jpg\",\n   category: \"Business Cards\"\n }, {\n   img: \"https://raw.githubusercontent.com/netology-code/ra16-homeworks/master/events-state/filter/img/emi_haze.jpg\",\n   category: \"Websites\"\n }, {\n   img: \"https://raw.githubusercontent.com/netology-code/ra16-homeworks/master/events-state/filter/img/codystretch.jpg\",\n   category: \"Websites\"\n }, {\n   img: \"https://raw.githubusercontent.com/netology-code/ra16-homeworks/master/events-state/filter/img/Triangle_003.jpg\",\n   category: \"Business Cards\"\n }, {\n   img: \"https://raw.githubusercontent.com/netology-code/ra16-homeworks/master/events-state/filter/img/place200x290.png\",\n   category: \"Websites\"\n }, {\n   img: \"https://raw.githubusercontent.com/netology-code/ra16-homeworks/master/events-state/filter/img/200.jpg\",\n   category: \"Websites\"\n }, {\n   img: \"https://raw.githubusercontent.com/netology-code/ra16-homeworks/master/events-state/filter/img/transmission.jpg\",\n   category: \"Business Cards\"\n }, {\n   img: \"https://raw.githubusercontent.com/netology-code/ra16-homeworks/master/events-state/filter/img/place200x290_1.png\",\n   category: \"Websites\"\n }, {\n   img: \"https://raw.githubusercontent.com/netology-code/ra16-homeworks/master/events-state/filter/img/place200x290_2.png\",\n   category: \"Flayers\"\n }, {\n   img: \"https://raw.githubusercontent.com/netology-code/ra16-homeworks/master/events-state/filter/img/the_ninetys_brand.jpg\",\n   category: \"Websites\"\n }, {\n   img: \"https://raw.githubusercontent.com/netology-code/ra16-homeworks/master/events-state/filter/img/dia.jpg\",\n   category: \"Business Cards\"\n }, {\n   img: \"https://raw.githubusercontent.com/netology-code/ra16-homeworks/master/events-state/filter/img/Triangle_350x197.jpg\",\n   category: \"Websites\"\n }, {\n   img: \"https://raw.githubusercontent.com/netology-code/ra16-homeworks/master/events-state/filter/img/Triangle_350x197_1.jpg\",\n   category: \"Websites\"\n }, {\n   img: \"https://raw.githubusercontent.com/netology-code/ra16-homeworks/master/events-state/filter/img/place200x290_3.png\",\n   category: \"Flayers\"\n }];\n}","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","/* eslint-disable react/jsx-filename-extension */\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n   <React.StrictMode>\n      <App />\n   </React.StrictMode>,\n   document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}